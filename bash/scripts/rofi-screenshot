#!/usr/bin/env bash
#
# Author: Manuel Teodoro
# Contact: teotenn@proton.me
#
# Rofi menu for Screenshots on sway based on grim
# 
# Dependencies:
#   -) grim
#   -) slurp for selected area
#   -) wl-clipboard for sending to clipboard
#   -) imagemagic for picking a color
# 
# The menu could work only with grim to create output files of screens and windows.
# The output images are send to the path in xdg-user-dir (see echo $xdg-user-dir PICTURES)
# on the subfolder /Screenshots/

declare -A options

options=(
  ["2) All"]="2) All"
  ["3) Output"]="3) Output"
  ["4) Region"]="4) Region"
  ["1) Window"]="5) Window"
  ["6) All to clipboard"]="6) All to clipboard"
  ["7) Output to clipboard"]="7) Output to clipboard"
  ["8) Region to clipboard"]="8) Region to clipboard"
  ["5) Window to clipboard"]="5) Window to clipboard"
  ["9) Pick a color"]="9) Pick a color"
)

# List for rofi
gen_list() {
    for i in "${!options[@]}"
    do
	echo "$i"
    done
}
 
local_theme=~/Code/dot_tt/rofi/solid-purple.rasi

main() {
  # Pass the list to rofi
  selected=$( (gen_list) | rofi -dmenu -theme $local_theme -matching fuzzy -no-custom -location 0 -p "Search > " )

  case $selected in
    "2) All")
      grim $(xdg-user-dir PICTURES)/Screenshots/$(date +'%s_grim.png')
      ;;

    "3) Output")
      grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') $(xdg-user-dir PICTURES)/Screenshots/$(date +'%s_grim.png')
      ;;
    
    "1) Window")
      grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" $(xdg-user-dir PICTURES)/Screenshots/$(date +'%s_grim.png')
      ;;

    "4) Region")
      grim -g "$(slurp)" $(xdg-user-dir PICTURES)/Screenshots/$(date +'%s_grim.png')
      ;;
    
    "6) All to clipboard")
      grim - | wl-copy
      ;;

    "7) Output to clipboard")
      grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy
      ;;
    
    "5) Window to clipboard")
      grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
      ;;

    "8) Region to clipboard")
      grim -g "$(slurp)" - | wl-copy
      ;;

    "9) Pick a color")
	grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | wl-copy
	;;
  esac
}

main

exit 0
